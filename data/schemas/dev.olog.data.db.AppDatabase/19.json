{
  "formatVersion": 1,
  "database": {
    "version": 19,
    "identityHash": "ac2b41b5e718b0cb82148de0fc524daf",
    "entities": [
      {
        "tableName": "mediastore_audio",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `artistId` TEXT NOT NULL, `albumId` TEXT NOT NULL, `title` TEXT NOT NULL, `artist` TEXT NOT NULL, `albumArtist` TEXT NOT NULL, `album` TEXT NOT NULL, `duration` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL, `dateModified` INTEGER NOT NULL, `directory` TEXT NOT NULL, `directoryName` TEXT NOT NULL, `path` TEXT NOT NULL, `discNumber` INTEGER NOT NULL, `trackNumber` INTEGER NOT NULL, `isPodcast` INTEGER NOT NULL, `displayName` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artistId",
            "columnName": "artistId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumId",
            "columnName": "albumId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artist",
            "columnName": "artist",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumArtist",
            "columnName": "albumArtist",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "album",
            "columnName": "album",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateModified",
            "columnName": "dateModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "directory",
            "columnName": "directory",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "directoryName",
            "columnName": "directoryName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "discNumber",
            "columnName": "discNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "trackNumber",
            "columnName": "trackNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPodcast",
            "columnName": "isPodcast",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_mediastore_audio_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_audio_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_mediastore_audio_artistId",
            "unique": false,
            "columnNames": [
              "artistId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_audio_artistId` ON `${TABLE_NAME}` (`artistId`)"
          },
          {
            "name": "index_mediastore_audio_albumId",
            "unique": false,
            "columnNames": [
              "albumId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_audio_albumId` ON `${TABLE_NAME}` (`albumId`)"
          },
          {
            "name": "index_mediastore_audio_directory",
            "unique": false,
            "columnNames": [
              "directory"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_audio_directory` ON `${TABLE_NAME}` (`directory`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "mediastore_genre",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_mediastore_genre_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_genre_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "mediastore_genre_track",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`genreId` TEXT NOT NULL, `songId` TEXT NOT NULL, PRIMARY KEY(`genreId`, `songId`))",
        "fields": [
          {
            "fieldPath": "genreId",
            "columnName": "genreId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "genreId",
            "songId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_mediastore_genre_track_genreId",
            "unique": false,
            "columnNames": [
              "genreId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_genre_track_genreId` ON `${TABLE_NAME}` (`genreId`)"
          },
          {
            "name": "index_mediastore_genre_track_songId",
            "unique": false,
            "columnNames": [
              "songId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_genre_track_songId` ON `${TABLE_NAME}` (`songId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "mediastore_playlist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `title` TEXT NOT NULL, `path` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_mediastore_playlist_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_playlist_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "mediastore_playlist_track",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`playlistId` TEXT NOT NULL, `songId` TEXT NOT NULL, `playOrder` INTEGER NOT NULL, PRIMARY KEY(`playlistId`, `songId`))",
        "fields": [
          {
            "fieldPath": "playlistId",
            "columnName": "playlistId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "playOrder",
            "columnName": "playOrder",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "playlistId",
            "songId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_mediastore_playlist_track_playlistId",
            "unique": false,
            "columnNames": [
              "playlistId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_playlist_track_playlistId` ON `${TABLE_NAME}` (`playlistId`)"
          },
          {
            "name": "index_mediastore_playlist_track_songId",
            "unique": false,
            "columnNames": [
              "songId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_mediastore_playlist_track_songId` ON `${TABLE_NAME}` (`songId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "blacklist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`directory` TEXT NOT NULL, PRIMARY KEY(`directory`))",
        "fields": [
          {
            "fieldPath": "directory",
            "columnName": "directory",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "directory"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_blacklist_directory",
            "unique": false,
            "columnNames": [
              "directory"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_blacklist_directory` ON `${TABLE_NAME}` (`directory`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "sort",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`tableName` TEXT NOT NULL, `columnName` TEXT NOT NULL, `direction` TEXT NOT NULL, PRIMARY KEY(`tableName`))",
        "fields": [
          {
            "fieldPath": "tableName",
            "columnName": "tableName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "columnName",
            "columnName": "columnName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "direction",
            "columnName": "direction",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "tableName"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "playing_queue",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`progressive` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `category` TEXT NOT NULL, `categoryValue` TEXT NOT NULL, `songId` INTEGER NOT NULL, `idInPlaylist` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "progressive",
            "columnName": "progressive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "categoryValue",
            "columnName": "categoryValue",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "idInPlaylist",
            "columnName": "idInPlaylist",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "progressive"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_playing_queue_progressive",
            "unique": false,
            "columnNames": [
              "progressive"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_playing_queue_progressive` ON `${TABLE_NAME}` (`progressive`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "playing",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "most_played_folder_v2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` TEXT NOT NULL, `path` TEXT NOT NULL, `timesPlayed` INTEGER NOT NULL, PRIMARY KEY(`songId`, `path`))",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timesPlayed",
            "columnName": "timesPlayed",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "songId",
            "path"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "most_played_playlist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `songId` INTEGER NOT NULL, `playlistId` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playlistId",
            "columnName": "playlistId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_most_played_playlist_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_most_played_playlist_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "most_played_genre_v2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` TEXT NOT NULL, `genreId` TEXT NOT NULL, `timesPlayed` INTEGER NOT NULL, PRIMARY KEY(`songId`, `genreId`))",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "genreId",
            "columnName": "genreId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timesPlayed",
            "columnName": "timesPlayed",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "songId",
            "genreId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "favourites",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_favourites_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_favourites_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "recent_searches",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pk` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `dataType` INTEGER NOT NULL, `itemId` INTEGER NOT NULL, `insertionTime` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "pk",
            "columnName": "pk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dataType",
            "columnName": "dataType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemId",
            "columnName": "itemId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "insertionTime",
            "columnName": "insertionTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "pk"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_recent_searches_pk",
            "unique": false,
            "columnNames": [
              "pk"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_recent_searches_pk` ON `${TABLE_NAME}` (`pk`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "song_history",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `songId` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_song_history_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_song_history_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "podcast_song_history",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `podcastId` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "podcastId",
            "columnName": "podcastId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_podcast_song_history_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_podcast_song_history_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "last_played_albums",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_last_played_albums_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_last_played_albums_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "last_played_artists",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_last_played_artists_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_last_played_artists_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "last_played_podcast_albums",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_last_played_podcast_albums_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_last_played_podcast_albums_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "last_played_podcast_artists",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_last_played_podcast_artists_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_last_played_podcast_artists_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "last_fm_track_v2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `title` TEXT NOT NULL, `artist` TEXT NOT NULL, `album` TEXT NOT NULL, `image` TEXT NOT NULL, `added` TEXT NOT NULL, `mbid` TEXT NOT NULL, `artistMbid` TEXT NOT NULL, `albumMbid` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artist",
            "columnName": "artist",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "album",
            "columnName": "album",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "added",
            "columnName": "added",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mbid",
            "columnName": "mbid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artistMbid",
            "columnName": "artistMbid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumMbid",
            "columnName": "albumMbid",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_last_fm_track_v2_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_last_fm_track_v2_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "last_fm_album_v2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `title` TEXT NOT NULL, `artist` TEXT NOT NULL, `image` TEXT NOT NULL, `added` TEXT NOT NULL, `mbid` TEXT NOT NULL, `wiki` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artist",
            "columnName": "artist",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "added",
            "columnName": "added",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mbid",
            "columnName": "mbid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "wiki",
            "columnName": "wiki",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_last_fm_album_v2_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_last_fm_album_v2_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "last_fm_artist_v2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `image` TEXT NOT NULL, `added` TEXT NOT NULL, `mbid` TEXT NOT NULL, `wiki` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "added",
            "columnName": "added",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mbid",
            "columnName": "mbid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "wiki",
            "columnName": "wiki",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_last_fm_artist_v2_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_last_fm_artist_v2_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "offline_lyrics",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`trackId` INTEGER NOT NULL, `lyrics` TEXT NOT NULL, PRIMARY KEY(`trackId`))",
        "fields": [
          {
            "fieldPath": "trackId",
            "columnName": "trackId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lyrics",
            "columnName": "lyrics",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "trackId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_offline_lyrics_trackId",
            "unique": false,
            "columnNames": [
              "trackId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_offline_lyrics_trackId` ON `${TABLE_NAME}` (`trackId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "playlist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `size` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "playlist_tracks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `idInPlaylist` INTEGER NOT NULL, `trackId` INTEGER NOT NULL, `playlistId` INTEGER NOT NULL, FOREIGN KEY(`playlistId`) REFERENCES `playlist`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "idInPlaylist",
            "columnName": "idInPlaylist",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "trackId",
            "columnName": "trackId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playlistId",
            "columnName": "playlistId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_playlist_tracks_playlistId",
            "unique": false,
            "columnNames": [
              "playlistId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_playlist_tracks_playlistId` ON `${TABLE_NAME}` (`playlistId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "playlist",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "playlistId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "podcast_playlist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `size` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "podcast_playlist_tracks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `idInPlaylist` INTEGER NOT NULL, `podcastId` INTEGER NOT NULL, `playlistId` INTEGER NOT NULL, FOREIGN KEY(`playlistId`) REFERENCES `podcast_playlist`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "idInPlaylist",
            "columnName": "idInPlaylist",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "podcastId",
            "columnName": "podcastId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playlistId",
            "columnName": "playlistId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_podcast_playlist_tracks_playlistId",
            "unique": false,
            "columnNames": [
              "playlistId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_podcast_playlist_tracks_playlistId` ON `${TABLE_NAME}` (`playlistId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "podcast_playlist",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "playlistId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "podcast_position",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `position` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "lyrics_sync_adjustment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `millis` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "millis",
            "columnName": "millis",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_lyrics_sync_adjustment_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_lyrics_sync_adjustment_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "equalizer_preset",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `bands` TEXT NOT NULL, `isCustom` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bands",
            "columnName": "bands",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isCustom",
            "columnName": "isCustom",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_equalizer_preset_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_equalizer_preset_id` ON `${TABLE_NAME}` (`id`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [
      {
        "viewName": "songs_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mediastore_audio.*\nFROM mediastore_audio\n    LEFT JOIN blacklist ON mediastore_audio.directory = blacklist.directory --remove blacklisted\nWHERE blacklist.directory IS NULL AND isPodcast = false"
      },
      {
        "viewName": "podcasts_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mediastore_audio.*\nFROM mediastore_audio\n    LEFT JOIN blacklist ON mediastore_audio.directory = blacklist.directory --remove blacklisted\nWHERE blacklist.directory IS NULL AND isPodcast = true"
      },
      {
        "viewName": "songs_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT songs_view.*\nFROM songs_view LEFT JOIN sort ON TRUE\nWHERE sort.tableName = 'songs'\nORDER BY\n-- artist, then title\nCASE WHEN sort.columnName = 'artist' AND artist = '<unknown>' THEN -1 END,\nCASE WHEN sort.columnName = 'artist' AND sort.direction = 'asc' THEN lower(artist) COLLATE UNICODE END ASC,\nCASE WHEN sort.columnName = 'artist' AND sort.direction = 'desc' THEN lower(artist) COLLATE UNICODE END DESC,\n-- album, then title\nCASE WHEN sort.columnName = 'album' AND album = '<unknown>' THEN -1 END,\nCASE WHEN sort.columnName = 'album' AND sort.direction = 'asc' THEN lower(album) COLLATE UNICODE END ASC,\nCASE WHEN sort.columnName = 'album' AND sort.direction = 'desc' THEN lower(album) COLLATE UNICODE END DESC,\n-- duration, then title\nCASE WHEN sort.columnName = 'duration' AND sort.direction = 'asc' THEN duration END ASC,\nCASE WHEN sort.columnName = 'duration' AND sort.direction = 'desc' THEN duration END DESC,\n-- date, then title\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'asc' THEN dateAdded END DESC,\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'desc' THEN dateAdded END ASC,\n-- default, and second sort\nCASE WHEN sort.direction = 'asc' THEN lower(title) COLLATE UNICODE END ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(title) COLLATE UNICODE END DESC"
      },
      {
        "viewName": "artists_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT DISTINCT artistId AS id, artist AS name, count(*) AS songs, MIN(dateAdded) as dateAdded \nFROM songs_view\nGROUP BY artistId"
      },
      {
        "viewName": "albums_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT DISTINCT albumId AS id, artistId, album AS title, artist, albumArtist, count(*) AS songs, MIN(dateAdded) as dateAdded, directory\nFROM songs_view\nGROUP BY albumId"
      },
      {
        "viewName": "folders_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT DISTINCT directory AS path, directoryName AS name, count(*) AS songs, MIN(dateAdded) as dateAdded\nFROM songs_view\nGROUP BY directory"
      },
      {
        "viewName": "genres_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mediastore_genre.*, COUNT(*) AS songs \nFROM mediastore_genre \n    JOIN mediastore_genre_track ON mediastore_genre.id = mediastore_genre_track.genreId\n    JOIN songs_view ON mediastore_genre_track.songId = songs_view.id \nGROUP BY mediastore_genre.id"
      },
      {
        "viewName": "playlists_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mediastore_playlist.*, COUNT(*) AS songs \nFROM mediastore_playlist \n    JOIN mediastore_playlist_track ON mediastore_playlist.id = mediastore_playlist_track.playlistId\n    JOIN songs_view ON mediastore_playlist_track.songId = songs_view.id \nGROUP BY mediastore_playlist.id"
      },
      {
        "viewName": "podcasts_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT podcasts_view.*\nFROM podcasts_view LEFT JOIN sort ON TRUE\nWHERE sort.tableName = 'podcast_episodes'\nORDER BY\n-- artist, then title\nCASE WHEN sort.columnName = 'artist' AND artist = '<unknown>' THEN -1 END,\nCASE WHEN sort.columnName = 'artist' AND sort.direction = 'asc' THEN lower(artist) COLLATE UNICODE END ASC,\nCASE WHEN sort.columnName = 'artist' AND sort.direction = 'desc' THEN lower(artist) COLLATE UNICODE END DESC,\n-- album, then title\nCASE WHEN sort.columnName = 'album' AND album = '<unknown>' THEN -1 END,\nCASE WHEN sort.columnName = 'album' AND sort.direction = 'asc' THEN lower(album) COLLATE UNICODE END ASC,\nCASE WHEN sort.columnName = 'album' AND sort.direction = 'desc' THEN lower(album) COLLATE UNICODE END DESC,\n-- duration, then title\nCASE WHEN sort.columnName = 'duration' AND sort.direction = 'asc' THEN duration END ASC,\nCASE WHEN sort.columnName = 'duration' AND sort.direction = 'desc' THEN duration END DESC,\n-- date, then title\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'asc' THEN dateAdded END DESC,\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'desc' THEN dateAdded END ASC,\n-- default, and second sort\nCASE WHEN sort.direction = 'asc' THEN lower(title) COLLATE UNICODE END ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(title) COLLATE UNICODE END DESC"
      },
      {
        "viewName": "podcast_albums_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT DISTINCT albumId AS id, artistId, album AS title, artist, albumArtist, count(*) AS songs, MIN(dateAdded) as dateAdded, directory\nFROM podcasts_view\nGROUP BY albumId"
      },
      {
        "viewName": "podcast_artists_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT DISTINCT artistId AS id, artist AS name, count(*) AS songs, MIN(dateAdded) as dateAdded \nFROM podcasts_view\nGROUP BY artistId"
      },
      {
        "viewName": "artists_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT artists_view.*\nFROM artists_view LEFT JOIN sort ON TRUE\nWHERE sort.tableName = 'artists'\nORDER BY\n-- artist\nCASE WHEN sort.columnName = 'artist' AND name = '<unknown>' THEN -1 END,\n-- date, then artist\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'asc' THEN dateAdded END ASC,\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'desc' THEN dateAdded END DESC,\n-- default, and second sort\nCASE WHEN sort.direction = 'asc' THEN lower(name) END COLLATE UNICODE ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(name) END COLLATE UNICODE DESC"
      },
      {
        "viewName": "albums_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT albums_view.*\nFROM albums_view LEFT JOIN sort ON TRUE\nWHERE sort.tableName = 'albums'\nORDER BY\n-- title, then artist\nCASE WHEN sort.columnName = 'album' AND title = '<unknown>' THEN -1 END,\n-- artist, then artist\nCASE WHEN sort.columnName = 'artist' AND artist = '<unknown>' THEN -1 END,\nCASE WHEN sort.columnName = 'artist' AND sort.direction = 'asc' THEN lower(artist) END COLLATE UNICODE ASC,\nCASE WHEN sort.columnName = 'artist' AND sort.direction = 'desc' THEN lower(artist) END COLLATE UNICODE DESC,\n-- date, then artist\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'asc' THEN dateAdded END ASC,\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'desc' THEN dateAdded END DESC,\n-- default, and second sort\nCASE WHEN sort.direction = 'asc' THEN lower(title) END COLLATE UNICODE ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(title) END COLLATE UNICODE DESC"
      },
      {
        "viewName": "folders_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT folders_view.*\nFROM folders_view LEFT JOIN sort ON TRUE\nWHERE sort.tableName = 'folders'\nORDER BY\n-- title\nCASE WHEN sort.direction = 'asc' THEN lower(name) END COLLATE UNICODE ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(name) END COLLATE UNICODE DESC"
      },
      {
        "viewName": "genres_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT genres_view.* \nFROM genres_view LEFT JOIN sort on TRUE\nWHERE sort.tableName = 'genres'\nORDER BY\n-- title\nCASE WHEN sort.direction = 'asc' THEN lower(name) END COLLATE UNICODE ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(name) END COLLATE UNICODE DESC"
      },
      {
        "viewName": "playlists_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT playlists_view.* \nFROM playlists_view LEFT JOIN sort on TRUE\nWHERE sort.tableName = 'playlists'\nORDER BY\n-- title\nCASE WHEN sort.direction = 'asc' THEN lower(title) END COLLATE UNICODE ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(title) END COLLATE UNICODE DESC"
      },
      {
        "viewName": "podcast_albums_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT podcast_albums_view.*\nFROM podcast_albums_view LEFT JOIN sort ON TRUE\nWHERE sort.tableName = 'podcast_albums'\nORDER BY\n-- title, then artist\nCASE WHEN sort.columnName = 'album' AND title = '<unknown>' THEN -1 END,\n-- artist, then artist\nCASE WHEN sort.columnName = 'artist' AND artist = '<unknown>' THEN -1 END,\nCASE WHEN sort.columnName = 'artist' AND sort.direction = 'asc' THEN lower(artist) END COLLATE UNICODE ASC,\nCASE WHEN sort.columnName = 'artist' AND sort.direction = 'desc' THEN lower(artist) END COLLATE UNICODE DESC,\n-- date, then artist\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'asc' THEN dateAdded END ASC,\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'desc' THEN dateAdded END DESC,\n-- default, and second sort\nCASE WHEN sort.direction = 'asc' THEN lower(title) END COLLATE UNICODE ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(title) END COLLATE UNICODE DESC"
      },
      {
        "viewName": "podcast_artists_view_sorted",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT podcast_artists_view.*\nFROM podcast_artists_view LEFT JOIN sort ON TRUE\nWHERE sort.tableName = 'podcast_artists'\nORDER BY\n-- artist\nCASE WHEN sort.columnName = 'artist' AND name = '<unknown>' THEN -1 END,\n-- date, then artist\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'asc' THEN dateAdded END ASC,\nCASE WHEN sort.columnName = 'date_added' AND sort.direction = 'desc' THEN dateAdded END DESC,\n-- default, and second sort\nCASE WHEN sort.direction = 'asc' THEN lower(name) END COLLATE UNICODE ASC,\nCASE WHEN sort.direction = 'desc' THEN lower(name) END COLLATE UNICODE DESC"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'ac2b41b5e718b0cb82148de0fc524daf')"
    ]
  }
}